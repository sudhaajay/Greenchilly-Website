<%- include('../layout/adminHeader.ejs') %>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">

    <form action="/admin/addproduct" method="post" enctype="multipart/form-data" id="product-form"
        onsubmit="return validationChecking()">

        <section class="content-main">
            <div class="row">
                <div class="col-12">
                    <div class="content-header">
                        <h2 class="content-title">Add New Product</h2>
                        <div>
                            <a href='/admin/prdoucts'> <button
                                    class="btn btn-light rounded font-sm mr-5 text-body hover-up">cancel</button></a>
                            <input type="submit" class="btn btn-md rounded font-sm hover-up" value="Upload">

                            <div id="invalid">
                                <% if (typeof error !=='undefined' && error) { %>
                                    <p class="text-danger" id="message">
                                        <%= error %>
                                    </p>
                                    <% } %>
                            </div>


                        </div>
                    </div>
                </div>
                <div class="col-lg-12">
                    <div class="card mb-4">
                        <div class="card-body">
                            <div class="mb-4">
                                <label for="product_title" class="form-label">Product title</label>
                                <input type="text" placeholder="Type here" name="name" class="form-control"
                                    id="product_title">

                                <div class="error-message" style="color: red;" id="product_title-error"></div>

                            </div>
                            <div class="row gx-3">

                                <div class="mb-4">
                                    <label for="product_brand" class="form-label">Brand</label>
                                    <input type="text" placeholder="Type here" name="brand" class="form-control"
                                        id="product_brand">

                                    <div class="error-message" style="color: red;" id="product_brand-error"></div>
                                </div>

                                <div class="col-md-6  mb-3">
                                    <label for="inputPassword4" class="form-label">category</label>
                                    <select name="category" class="form-control" id="product_category">
                                        <option value="" disabled selected>Select a Category
                                        </option>
                                        <% categories.forEach(category=> {

                                            if (category.is_listed) {
                                            %>

                                            <option value="<%= category._id %>">
                                                <%= category.name %>
                                            </option>

                                            <% } }); %>



                                    </select>

                                    <div class="error-message" style="color: red;" id="product_category-error"></div>
                                </div>

                                <div class="mb-4">
                                    <label for="product_stock" class="form-label">stock</label>
                                    <input type="text" placeholder="Type here" name="stock" class="form-control"
                                        id="product_stock">

                                    <div class="error-message" style="color: red;" id="product_stock-error"></div>
                                </div>



                            </div>


                        </div>
                    </div>
                    <div class="card mb-4">
                        <div class="card-body">
                            <div class="row gx-3">
                                <div class="col-md-4">
                                    <label for="product_price" class="form-label">price</label>
                                    <input type="text" class="form-control" name="price" placeholder="enter the price"
                                        id="product_price">
                                    <div class="error-message" style="color: red;" id="product_price-error"></div>
                                </div>
                                <div class="col-md-4">
                                    <label for="discount_price">Discount Price:</label>
                                    <input type="text" name="discount_price" placeholder="Type here"
                                        class="form-control" id="discount_price">
                                    <div class="error-message" style="color: red;" id="discount_price-error"></div>
                                </div>



                            </div>
                            <div class="row gx-3">
                                <div class="col-md-12 card mb-4">
                                    <div class="card-body">

                                        <div class="size-container">
                                            <!-- Add Product Images Here -->
                                        </div>


                                    </div>
                                </div>
                            </div>






                            <div>
                                <label class="form-label">Description</label>
                                <textarea placeholder="Type here" name="description" class="form-control" rows="4"
                                    id="description"></textarea>
                                <div class="error-message" style="color: red;" id="description-error"></div>

                            </div>
                        </div>
                    </div> <!-- card end// -->

                </div>





                <div class="col-lg-12">
                    <div class="card mb-4">
                        <div class="card-header">
                            <h4>Cover Image</h4>
                        </div>
                        <div class="card-body">
                            <div class="input-upload">
                                <img src="/assetsb/imgs/theme/upload.svg" alt="">
                                <input name="image" id="CoverInput" class="form-control"
                                    onchange="cropBanner('CoverInput')" type="file" accept="image/*">
                            </div>
                            <div class="image-preview" id="Container_CoverInput">
                                <img src="" id="show_CoverInput" style="width: 600px;" alt="">
                                <center> <button class="btn btn-success mt-3" onclick="uploadBannerImage('CoverInput')"
                                        id="upload_CoverInput" style="display: none;" type="button">Save</button>
                                </center>
                            </div>
                            <p id="CoverInputError" class="text-danger"></p>
                        </div>
                        <div class="card-header">
                            <h4>Sub Images</h4>
                        </div>
                        <div class="card-body">
                            <div class="input-upload">
                                <img src="/assetsb/imgs/theme/upload.svg" alt="">
                                <div id="imagePreview" class="image-preview"></div>
                                <input name="image" id="imageInput" class="form-control" type="file" accept="image/*"
                                    multiple>
                                <p id="product_image-error" class="text-danger"></p>
                            </div>
                        </div>



                        <script>
                            const imgPreview = document.getElementById('imagePreview');
                            const inputField = document.getElementById('imageInput');

                            inputField.addEventListener('change', function (event) {
                                const files = event.target.files;
                                imgPreview.innerHTML = ''; // Clear the previous preview images

                                for (let i = 0; i < files.length; i++) {
                                    const file = files[i];
                                    const reader = new FileReader();

                                    reader.onload = function (e) {
                                        const img = document.createElement('img');
                                        img.src = e.target.result;
                                        img.style.maxWidth = '100px'; // Set max width for the preview image

                                        const deleteBtn = document.createElement('button');
                                        deleteBtn.innerText = 'X';
                                        deleteBtn.style.borderRadius = '100%'; // Makes the button round
                                        deleteBtn.style.backgroundColor = 'red'; // Sets the background color to red
                                        deleteBtn.style.color = 'white'; // Sets the text color to white
                                        deleteBtn.style.border = 'none'; // Removes the button border
                                        deleteBtn.style.padding = '5px 10px'; // Adjusts padding for better appearance
                                        deleteBtn.addEventListener('click', function () {
                                            img.parentNode.removeChild(img); // Remove the image element
                                            deleteBtn.parentNode.removeChild(deleteBtn);
                                            removeAndReconstructInput(file); // Remove the file and reconstruct the input field
                                        });

                                        const container = document.createElement('div');
                                        container.appendChild(img);
                                        container.appendChild(deleteBtn);
                                        imgPreview.appendChild(container); // Append the new image preview with delete button
                                    };

                                    reader.readAsDataURL(file);
                                }
                            });

                            function removeAndReconstructInput(fileToRemove) {
                                const index = Array.from(inputField.files).findIndex(file => file === fileToRemove);
                                if (index !== -1) {
                                    removeFileFromFileList(index); // Call the removeFileFromFileList function passing the index
                                }
                            }

                            function removeFileFromFileList(index) {
                                const dt = new DataTransfer();
                                const files = inputField.files;

                                for (let i = 0; i < files.length; i++) {
                                    if (index !== i) {
                                        const file = files[i];
                                        dt.items.add(file); // Exclude the file based on the provided index
                                    }
                                }

                                inputField.files = dt.files; // Assign the updated file list to the input field
                            }
                        </script>


                    </div>

                </div>








                <div id="invalid">
                    <% if (typeof message !=='undefined' && message) { %>
                        <p style="color: rgb(8, 96, 0);" id="message">
                            <%= message %>
                        </p>
                        <% } %>
                                      
                </div>
            </div> <!-- card end// -->
            </div>

            </div>
        </section>
    </form>


    <script>
        let cropper;

        function displayImage(imageNumber, input) {
            const preview = document.getElementById(`image-preview${imageNumber}`);

            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    preview.src = e.target.result;
                };
                reader.readAsDataURL(input.files[0]);
            } else {
                preview.src = '';
            }
        }
        function cropBanner(id) {
            const input = document.getElementById(id);
            alert(input.type)
            const canvas = document.getElementById(`show_${id}`);
            const file = input.files[0];

            if (file) {
                const reader = new FileReader();

                reader.onload = function (e) {
                    canvas.src = e.target.result;
                    if (cropper) {
                        cropper.destroy();
                    }

                    cropper = new Cropper(canvas, {
                        viewMode: 2,
                    });
                };
                document.getElementById('upload_' + id).style.display = 'block'
                reader.readAsDataURL(file);
            } else {
                canvas.src = '';
                if (cropper) {
                    cropper.destroy();
                }
            }
        }

        function uploadBannerImage(id) {
            const canvas = cropper.getCroppedCanvas();
            if (canvas) {
                canvas.toBlob((blob) => {
                    const fileName = 'croppedCoverImage.jpg';
                    const file = new File([blob], fileName, { type: 'image/jpeg' });
                    const input = document.getElementById(id);

                    if (DataTransfer && FileList) {
                        const dataTransfer = new DataTransfer();
                        dataTransfer.items.add(file);
                        input.files = dataTransfer.files;
                    } else {
                        console.error('FileList and DataTransfer are not supported in this browser.');
                    }

                    const showImg = document.getElementById(`show_${id}`);
                    showImg.src = URL.createObjectURL(blob);

                    cropper.destroy();
                });
                document.getElementById('upload_' + id).style.display = 'none'
            }
        }


        function validationChecking() {

            const product_title = document.getElementById("product_title").value;
            const product_brand = document.getElementById("product_brand").value;
            const product_category = document.querySelector('select[name="category"]').value.trim();
            const product_stock = document.getElementById("product_stock").value;
            const product_price = document.getElementById("product_price").value;
            const discount_price = document.getElementById("discount_price").value;
            const description = document.getElementById("description").value;
            const product_title_error = document.getElementById("product_title-error");
            const product_brand_error = document.getElementById("product_brand-error");
            const product_category_error = document.getElementById("product_category-error");
            const product_stock_error = document.getElementById("product_stock-error");
            const product_price_error = document.getElementById("product_price-error");
            const discount_price_error = document.getElementById("discount_price-error");
            const description_error = document.getElementById("description-error");
            product_title_error.innerHTML = product_title.trim() === "" ? "Please enter product name" : "";
            product_brand_error.innerHTML = product_brand.trim() === "" ? "Please enter product brand" : "";
            product_category_error.innerHTML = product_category.trim() === "" ? "Please enter product category" : "";
            product_stock_error.innerHTML = isNaN(product_stock) || product_stock.trim() === "" || parseFloat(product_stock) < 0 ? "Please enter a valid stock " : "";
            product_price_error.innerHTML = isNaN(product_price) || product_price.trim() === "" || parseFloat(product_price) < 0 ? "Please enter a valid price " : "";
            discount_price_error.innerHTML = isNaN(discount_price) || discount_price.trim() === "" || parseFloat(discount_price) < 0 ? "Please enter a valid discount price " : "";
            description_error.innerHTML = description.trim() === "" ? "Please enter product description" : "";
            
            const coverimageInput = document.getElementById("CoverInput");
            const product_coverimageerror = document.getElementById("CoverInputError");

            if(coverimageInput.files.length === 0 || coverimageInput.files.length > 1) {
                product_coverimageerror.innerHTML = 'Add One Cover Image'
            }
            const fileInput = document.getElementById("imageInput");
            const errorMessage = document.getElementById("product_image-error");

            // Reset error message
            errorMessage.innerHTML = "";
            // Check if files are selected
            if (fileInput.files.length === 0) {
                errorMessage.innerHTML = "Please select at least one image.";
                return false;  // Updated this line
            }

            // Check file formats
            const allowedFormats = ["image/jpeg", "image/bmp", "image/avif", "image/png", "image/webp", "image/gif"]; // Add more formats if needed
            for (const file of fileInput.files) {
                if (!allowedFormats.includes(file.type)) {
                    errorMessage.innerHTML = "Invalid image format. Please select images in JPEG, PNG, or GIF format.";
                    fileInput.value = ""; // Clear the selected files
                    return false;  // Updated this line
                }
            }
            return (errorMessage.innerHTML !== "" || product_coverimageerror.innerHTML !== '' || product_title_error.innerHTML !== "" || product_brand_error.innerHTML !== "" || product_category_error.innerHTML !== "" || product_stock_error.innerHTML !== "" || product_price_error.innerHTML !== "" || discount_price_error.innerHTML !== "" || description_error.innerHTML !== "") ? false : true
        }
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

    <%- include('../Layout/adminFooter.ejs') %>